"""
ProductWhereInput is used for filtering Product objects.
Input was generated by ent.
"""
input ProductWhereInput {
  not: ProductWhereInput
  and: [ProductWhereInput!]
  or: [ProductWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """status field predicates"""
  status: ProductStatus
  statusNEQ: ProductStatus
  statusIn: [ProductStatus!]
  statusNotIn: [ProductStatus!]
  
  """priority field predicates"""
  priority: Int
  priorityNEQ: Int
  priorityIn: [Int!]
  priorityNotIn: [Int!]
  priorityGT: Int
  priorityGTE: Int
  priorityLT: Int
  priorityLTE: Int
  
  """text field predicates"""
  text: String
  textNEQ: String
  textIn: [String!]
  textNotIn: [String!]
  textGT: String
  textGTE: String
  textLT: String
  textLTE: String
  textContains: String
  textHasPrefix: String
  textHasSuffix: String
  textEqualFold: String
  textContainsFold: String
}

"""
CategoryWhereInput is used for filtering Category objects.
Input was generated by ent.
"""
input CategoryWhereInput {
  not: CategoryWhereInput
  and: [CategoryWhereInput!]
  or: [CategoryWhereInput!]
  
  """text field predicates"""
  text: String
  textNEQ: String
  textIn: [String!]
  textNotIn: [String!]
  textGT: String
  textGTE: String
  textLT: String
  textLTE: String
  textContains: String
  textHasPrefix: String
  textHasSuffix: String
  textEqualFold: String
  textContainsFold: String
  
  """status field predicates"""
  status: CategoryStatus
  statusNEQ: CategoryStatus
  statusIn: [CategoryStatus!]
  statusNotIn: [CategoryStatus!]
  
  """config field predicates"""
  config: CategoryConfigInput
  configNEQ: CategoryConfigInput
  configIn: [CategoryConfigInput!]
  configNotIn: [CategoryConfigInput!]
  configGT: CategoryConfigInput
  configGTE: CategoryConfigInput
  configLT: CategoryConfigInput
  configLTE: CategoryConfigInput
  configIsNil: Boolean
  configNotNil: Boolean
}

"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  
  """status field predicates"""
  status: UserStatus
  statusNEQ: UserStatus
  statusIn: [UserStatus!]
  statusNotIn: [UserStatus!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """email field predicates"""
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  
  """password field predicates"""
  password: String
  passwordNEQ: String
  passwordIn: [String!]
  passwordNotIn: [String!]
  passwordGT: String
  passwordGTE: String
  passwordLT: String
  passwordLTE: String
  passwordContains: String
  passwordHasPrefix: String
  passwordHasSuffix: String
  passwordEqualFold: String
  passwordContainsFold: String
  
  """refresh_token field predicates"""
  refreshToken: String
  refreshTokenNEQ: String
  refreshTokenIn: [String!]
  refreshTokenNotIn: [String!]
  refreshTokenGT: String
  refreshTokenGTE: String
  refreshTokenLT: String
  refreshTokenLTE: String
  refreshTokenContains: String
  refreshTokenHasPrefix: String
  refreshTokenHasSuffix: String
  refreshTokenEqualFold: String
  refreshTokenContainsFold: String
  
  """provider_id field predicates"""
  providerID: String
  providerIDNEQ: String
  providerIDIn: [String!]
  providerIDNotIn: [String!]
  providerIDGT: String
  providerIDGTE: String
  providerIDLT: String
  providerIDLTE: String
  providerIDContains: String
  providerIDHasPrefix: String
  providerIDHasSuffix: String
  providerIDEqualFold: String
  providerIDContainsFold: String
  
  """provider_name field predicates"""
  providerName: String
  providerNameNEQ: String
  providerNameIn: [String!]
  providerNameNotIn: [String!]
  providerNameGT: String
  providerNameGTE: String
  providerNameLT: String
  providerNameLTE: String
  providerNameContains: String
  providerNameHasPrefix: String
  providerNameHasSuffix: String
  providerNameEqualFold: String
  providerNameContainsFold: String
  
  """role field predicates"""
  role: String
  roleNEQ: String
  roleIn: [String!]
  roleNotIn: [String!]
  roleGT: String
  roleGTE: String
  roleLT: String
  roleLTE: String
  roleContains: String
  roleHasPrefix: String
  roleHasSuffix: String
  roleEqualFold: String
  roleContainsFold: String
}
